{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Hi gays, Welcome to my Zone!","text":"<p>\u2014\u2014 \u6c38\u8fdc\u6d3b\u5728\u70ed\u7231\u91cc\uff01</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u6211\u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0\uff0c\u4e5f\u8bb0\u5f55\u6210\u957f\uff01</p> <p></p>"},{"location":"blogs/post/%E4%B8%BB%E9%A1%B5%E7%AE%80%E4%BB%8B/","title":"Hi gays, Welcome to my Zone!","text":"<p>\u2014\u2014 \u6c38\u8fdc\u6d3b\u5728\u70ed\u7231\u91cc\uff01</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u6211\u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0\uff0c\u4e5f\u8bb0\u5f55\u6210\u957f\uff01</p> <p></p>"},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/Linux/","title":"Linux","text":""},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/Linux/#_1","title":"\u6587\u4ef6\u68c0\u7d22","text":"<pre><code>find /path/to/directory/ -name '*.py' # \u641c\u7d22\u67d0\u4e2a\u6587\u4ef6\u8def\u5f84\u4e0b\u7684\u6240\u6709*.py\u6587\u4ef6\ngrep xxx # \u4ecestdin\u4e2d\u8bfb\u5165\u82e5\u5e72\u884c\u6570\u636e\uff0c\u5982\u679c\u67d0\u884c\u4e2d\u5305\u542bxxx\uff0c\u5219\u8f93\u51fa\u8be5\u884c\uff1b\u5426\u5219\u5ffd\u7565\u8be5\u884c\u3002\nwc # \u7edf\u8ba1\u884c\u6570\u3001\u5355\u8bcd\u6570\u3001\u5b57\u8282\u6570\n# \u65e2\u53ef\u4ee5\u4ecestdin\u4e2d\u76f4\u63a5\u8bfb\u5165\u5185\u5bb9\uff1b\u4e5f\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u4f20\u5165\u6587\u4ef6\u540d\u5217\u8868\uff1b\nwc -l # \u7edf\u8ba1\u884c\u6570\nwc -w # \u7edf\u8ba1\u5355\u8bcd\u6570\nwc -c # \u7edf\u8ba1\u5b57\u8282\u6570\ntree # \u5c55\u793a\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784\ntree /path/to/directory/ # \u5c55\u793a\u67d0\u4e2a\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u6784\ntree -a # \u5c55\u793a\u9690\u85cf\u6587\u4ef6\nag xxx # \u641c\u7d22\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u68c0\u7d22xxx\u5b57\u7b26\u4e32\ncut # \u5206\u5272\u4e00\u884c\u5185\u5bb9\n# \u4ecestdin\u4e2d\u8bfb\u5165\u591a\u884c\u6570\u636e\necho $PATH | cut -d ':' -f 3,5 # \u8f93\u51faPATH\u7528:\u5206\u5272\u540e\u7b2c3\u30015\u5217\u6570\u636e\necho $PATH | cut -d ':' -f 3-5 # \u8f93\u51faPATH\u7528:\u5206\u5272\u540e\u7b2c3-5\u5217\u6570\u636e\necho $PATH | cut -c 3,5 # \u8f93\u51faPATH\u7684\u7b2c3\u30015\u4e2a\u5b57\u7b26\necho $PATH | cut -c 3-5 # \u8f93\u51faPATH\u7684\u7b2c3-5\u4e2a\u5b57\u7b26\nsort # \u5c06\u6bcf\u884c\u5185\u5bb9\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\n# \u53ef\u4ee5\u4ecestdin\u4e2d\u8bfb\u53d6\u591a\u884c\u6570\u636e\n# \u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u8bfb\u53d6\u6587\u4ef6\u540d\u5217\u8868\nxargs # \u5c06stdin\u4e2d\u7684\u6570\u636e\u7528\u7a7a\u683c\u6216\u56de\u8f66\u5206\u5272\u6210\u547d\u4ee4\u884c\u53c2\u6570\nfind . -name '*.py' | xargs cat | wc -l # \u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709python\u6587\u4ef6\u7684\u603b\u884c\u6570\nfind . -name '*.py' | xargs rm # \u627e\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709python\u6587\u4ef6\u7684\u5e76\u5220\u9664\n</code></pre>"},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/docker/","title":"Docker","text":""},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/docker/#docker","title":"Docker\u5e38\u7528\u6307\u4ee4","text":"<pre><code># \u955c\u50cf\ndocker pull ubuntu:20.04 # \u62c9\u53d6\u4e00\u4e2a\u955c\u50cf\ndocker images # \u5217\u51fa\u672c\u5730\u6240\u6709\u955c\u50cf\ndocker image rm ubuntu:20.04 \u6216 docker rmi ubuntu:20.04 # \u5220\u9664\u955c\u50cfubuntu:20.04\ndocker [container] commit CONTAINER IMAGE_NAME:TAG # \u521b\u5efa\u67d0\u4e2acontainer\u7684\u955c\u50cf\ndocker save -o ubuntu_20_04.tar ubuntu:20.04 # \u5c06\u955c\u50cfubuntu:20.04\u5bfc\u51fa\u5230\u672c\u5730\u6587\u4ef6ubuntu_20_04.tar\u4e2d\ndocker load -i ubuntu_20_04.tar # \u5c06\u955c\u50cfubuntu:20.04\u4ece\u672c\u5730\u6587\u4ef6ubuntu_20_04.tar\u4e2d\u52a0\u8f7d\u51fa\u6765\n# \u5bb9\u5668\ndocker [container] create -it ubuntu:20.04 # \u5229\u7528\u955c\u50cfubuntu:20.04\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\ndocker ps -a # \u67e5\u770b\u672c\u5730\u7684\u6240\u6709\u5bb9\u5668\ndocker [container] start CONTAINER # \u542f\u52a8\u5bb9\u5668\ndocker [container] stop CONTAINER # \u505c\u6b62\u5bb9\u5668\ndocker [container] restart CONTAINER # \u91cd\u542f\u5bb9\u5668\ndocker [contaienr] run -itd ubuntu:20.04 # \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\ndocker [container] attach CONTAINER # \u8fdb\u5165\u5bb9\u5668\n# \u5148\u6309Ctrl-p\uff0c\u518d\u6309Ctrl-q\u53ef\u4ee5\u6302\u8d77\u5bb9\u5668\ndocker [container] exec CONTAINER COMMAND # \u5728\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4\ndocker [container] rm CONTAINER # \u5220\u9664\u5bb9\u5668\ndocker container prune # \u5220\u9664\u6240\u6709\u5df2\u505c\u6b62\u7684\u5bb9\u5668\ndocker export -o xxx.tar CONTAINER # \u5c06\u5bb9\u5668CONTAINER\u5bfc\u51fa\u5230\u672c\u5730\u6587\u4ef6xxx.tar\u4e2d\ndocker import xxx.tar image_name:tag # \u5c06\u672c\u5730\u6587\u4ef6xxx.tar\u5bfc\u5165\u6210\u955c\u50cf\uff0c\u5e76\u5c06\u955c\u50cf\u547d\u540d\u4e3aimage_name:tag\n# docker export/import\u4e0edocker save/load\u7684\u533a\u522b\uff1a\n# export/import\u4f1a\u4e22\u5f03\u5386\u53f2\u8bb0\u5f55\u548c\u5143\u6570\u636e\u4fe1\u606f\uff0c\u4ec5\u4fdd\u5b58\u5bb9\u5668\u5f53\u65f6\u7684\u5feb\u7167\u72b6\u6001\n# save/load\u4f1a\u4fdd\u5b58\u5b8c\u6574\u8bb0\u5f55\uff0c\u4f53\u79ef\u66f4\u5927\ndocker top CONTAINER # \u67e5\u770b\u67d0\u4e2a\u5bb9\u5668\u5185\u7684\u6240\u6709\u8fdb\u7a0b\ndocker stats # \u67e5\u770b\u6240\u6709\u5bb9\u5668\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5305\u62ecCPU\u3001\u5185\u5b58\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u7b49\u4fe1\u606f\ndocker cp xxx CONTAINER:xxx \u6216 docker cp CONTAINER:xxx xxx # \u5728\u672c\u5730\u548c\u5bb9\u5668\u95f4\u590d\u5236\u6587\u4ef6\ndocker rename CONTAINER1 CONTAINER2 # \u91cd\u547d\u540d\u5bb9\u5668\ndocker update CONTAINER --memory 500MB # \u4fee\u6539\u5bb9\u5668\u9650\u5236\n</code></pre>"},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/git/","title":"Git","text":""},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/git/#git","title":"Git\u5e38\u7528\u6307\u4ee4","text":""},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/git/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u5de5\u4f5c\u533a\uff1a\u4ed3\u5e93\u7684\u76ee\u5f55\u3002\u5de5\u4f5c\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002</li> <li>\u6682\u5b58\u533a\uff1a\u6570\u636e\u6682\u65f6\u5b58\u653e\u7684\u533a\u57df\uff0c\u7c7b\u4f3c\u4e8e\u5de5\u4f5c\u533a\u5199\u5165\u7248\u672c\u5e93\u524d\u7684\u7f13\u5b58\u533a\u3002\u6682\u5b58\u533a\u662f\u72ec\u7acb\u4e8e\u5404\u4e2a\u5206\u652f\u7684\u3002</li> <li>\u7248\u672c\u5e93\uff1a\u5b58\u653e\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u7684\u4ee3\u7801\u7248\u672c</li> <li>\u7248\u672c\u7ed3\u6784\uff1a\u6811\u7ed3\u6784\uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u4ee3\u7801\u7248\u672c\u3002</li> </ul>"},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/git/#_2","title":"\u5e38\u7528\u6307\u4ee4","text":"<pre><code>git config --global user.name xxx # \u8bbe\u7f6e\u5168\u5c40\u7528\u6237\u540d\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728~/.gitconfig\u6587\u4ef6\u4e2d\ngit config --global user.email xxx@xxx.com # \u8bbe\u7f6e\u5168\u5c40\u90ae\u7bb1\u5730\u5740\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728~/.gitconfig\u6587\u4ef6\u4e2d\ngit init # \u5c06\u5f53\u524d\u76ee\u5f55\u914d\u7f6e\u6210git\u4ed3\u5e93\uff0c\u4fe1\u606f\u8bb0\u5f55\u5728\u9690\u85cf\u7684.git\u6587\u4ef6\u5939\u4e2d\ngit add XX # \u5c06XX\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\ngit add . # \u5c06\u6240\u6709\u5f85\u52a0\u5165\u6682\u5b58\u533a\u7684\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a\ngit reset HEAD \u6216\u8005 git reset . # \u64a4\u9500\u6682\u5b58\u533a\u6240\u6709\u6587\u4ef6\ngit reset HEAD '\u6587\u4ef6\u540d' # \u64a4\u9500\u6682\u5b58\u533a\u6307\u5b9a\u6587\u4ef6\ngit reset HEAD XXX/ # \u64a4\u9500\u6682\u5b58\u533a\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\ngit rm --cached XX # \u5c06\u6587\u4ef6\u4ece\u4ed3\u5e93\u7d22\u5f15\u76ee\u5f55\u4e2d\u5220\u6389\ngit commit -m \"\u7ed9\u81ea\u5df1\u770b\u7684\u5907\u6ce8\u4fe1\u606f\" # \u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f\ngit status # \u67e5\u770b\u4ed3\u5e93\u72b6\u6001\ngit diff XX # \u67e5\u770bXX\u6587\u4ef6\u76f8\u5bf9\u4e8e\u6682\u5b58\u533a\u4fee\u6539\u4e86\u54ea\u4e9b\u5185\u5bb9\ngit log # \u67e5\u770b\u5f53\u524d\u5206\u652f\u7684\u6240\u6709\u7248\u672c\ngit reflog # \u67e5\u770bHEAD\u6307\u9488\u7684\u79fb\u52a8\u5386\u53f2\uff08\u5305\u62ec\u88ab\u56de\u6eda\u7684\u7248\u672c\uff09\ngit reset --hard HEAD^ \u6216 git reset --hard HEAD~ # \u5c06\u4ee3\u7801\u5e93\u56de\u6eda\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\ngit reset --hard HEAD^^ # \u5f80\u4e0a\u56de\u6eda\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\ngit reset --hard HEAD~100 # \u5f80\u4e0a\u56de\u6eda100\u4e2a\u7248\u672c\ngit reset --hard \u7248\u672c\u53f7 # \u56de\u6eda\u5230\u67d0\u4e00\u7279\u5b9a\u7248\u672c\ngit checkout \u2014 XX\u6216git restore XX # \u5c06XX\u6587\u4ef6\u5c1a\u672a\u52a0\u5165\u6682\u5b58\u533a\u7684\u4fee\u6539\u5168\u90e8\u64a4\u9500\ngit remote add origin git@git.acwing.com:xxx/XXX.git # \u5c06\u672c\u5730\u4ed3\u5e93\u5173\u8054\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit push -u (\u7b2c\u4e00\u6b21\u9700\u8981-u\u4ee5\u540e\u4e0d\u9700\u8981) # \u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit push origin branch_name # \u5c06\u672c\u5730\u7684\u67d0\u4e2a\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\ngit clone git@git.acwing.com:xxx/XXX.git # \u5c06\u8fdc\u7a0b\u4ed3\u5e93XXX\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\ngit checkout -b branch_name # \u521b\u5efa\u5e76\u5207\u6362\u5230branch_name\u8fd9\u4e2a\u5206\u652f\ngit branch # \u67e5\u770b\u6240\u6709\u5206\u652f\u548c\u5f53\u524d\u6240\u5904\u5206\u652f\ngit checkout branch_name # \u5207\u6362\u5230branch_name\u8fd9\u4e2a\u5206\u652f\ngit merge branch_name # \u5c06\u5206\u652fbranch_name\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u4e0a\ngit branch -d branch_name # \u5220\u9664\u672c\u5730\u4ed3\u5e93\u7684branch_name\u5206\u652f\ngit branch branch_name # \u521b\u5efa\u65b0\u5206\u652f\ngit push --set-upstream origin branch_name # \u8bbe\u7f6e\u672c\u5730\u7684branch_name\u5206\u652f\u5bf9\u5e94\u8fdc\u7a0b\u4ed3\u5e93\u7684branch_name\u5206\u652f\ngit push -d origin branch_name # \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684branch_name\u5206\u652f\ngit pull # \u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76\ngit pull origin branch_name # \u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684branch_name\u5206\u652f\u4e0e\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\u5408\u5e76\ngit branch --set-upstream-to=origin/branch_name1 branch_name2 # \u5c06\u8fdc\u7a0b\u7684branch_name1\u5206\u652f\u4e0e\u672c\u5730\u7684branch_name2\u5206\u652f\u5bf9\u5e94\ngit checkout -t origin/branch_name # \u5c06\u8fdc\u7a0b\u7684branch_name\u5206\u652f\u62c9\u53d6\u5230\u672c\u5730\ngit stash # \u5c06\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u5c1a\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u5b58\u5165\u6808\u4e2d\ngit stash apply # \u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u4f46\u4e0d\u5220\u9664\u6808\u9876\u5143\u7d20\ngit stash drop # \u5220\u9664\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\ngit stash pop # \u5c06\u6808\u9876\u5b58\u50a8\u7684\u4fee\u6539\u6062\u590d\u5230\u5f53\u524d\u5206\u652f\uff0c\u540c\u65f6\u5220\u9664\u6808\u9876\u5143\u7d20\ngit stash list # \u67e5\u770b\u6808\u4e2d\u6240\u6709\u5143\u7d20\ngit config --global init.defaultBranch main # \u5c06\u672c\u5730\u9ed8\u8ba4\u521b\u5efa\u7684\u5206\u652f\u547d\u540d\u4e3a main\n</code></pre>"},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/shell/","title":"Shell","text":""},{"location":"blogs/post/Linux/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/shell/#_1","title":"\u4e00\u3001\u6982\u8bba","text":"<p>shell\u662f\u6211\u4eec\u901a\u8fc7\u547d\u4ee4\u884c\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6c9f\u901a\u7684\u8bed\u8a00\u3002</p> <p>shell\u811a\u672c\u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u5957\u903b\u8f91\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u65b9\u4fbf\u590d\u7528\u3002 AC Terminal\u4e2d\u7684\u547d\u4ee4\u884c\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u201cshell\u811a\u672c\u5728\u9010\u884c\u6267\u884c\u201d\u3002</p> <p>Linux\u4e2d\u5e38\u89c1\u7684shell\u811a\u672c\u6709\u5f88\u591a\u79cd\uff0c\u5e38\u89c1\u7684\u6709\uff1a</p> <ul> <li>Bourne Shell(/usr/bin/sh\u6216/bin/sh)</li> <li>Bourne Again Shell(/bin/bash)</li> <li>C Shell(/usr/bin/csh)</li> <li> <p>K Shell(/usr/bin/ksh)</p> </li> <li> <p>zsh</p> </li> <li>\u2026</li> </ul> <p>Linux\u7cfb\u7edf\u4e2d\u4e00\u822c\u9ed8\u8ba4\u4f7f\u7528 <code>bash</code>\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8bb2\u89e3 <code>bash</code> \u4e2d\u7684\u8bed\u6cd5\u3002 \u6587\u4ef6\u5f00\u5934\u9700\u8981\u5199 <code>/bin/bash</code>\uff0c\u6307\u660e<code>bash</code>\u4e3a\u811a\u672c\u89e3\u91ca\u5668\u3002</p>"},{"location":"blogs/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/","title":"\u7b2c\u4e00\u7ae0 \u7ebf\u6027\u56de\u5f52","text":""},{"location":"blogs/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_1","title":"\u5f85\u66f4\u65b0","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#1","title":"1 \u5feb\u901f\u6392\u5e8f\u7b97\u6cd5","text":"<p>Acwing 785</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, a[N];\nvoid quick_sort(int q[], int l, int r) {\nif (l &gt;= r) return;\nint i = l - 1, j = r + 1, x = q[(l + r) &gt;&gt; 1];\nwhile (i &lt; j) {\ndo i++; while (q[i] &lt; x);\ndo j--; while (q[j] &gt; x);\nif (i &lt; j) swap(q[i], q[j]);\n}\nquick_sort(q, l, j);\nquick_sort(q, j + 1, r);\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", a + i);\nquick_sort(a, 0, n - 1);\nfor (int i = 0; i &lt; n; i++) printf(\"%d \", a[i]);\nputs(\"\");\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#12-k","title":"1.2 \u7b2c k \u4e2a\u6570","text":"<p>Acwing 786</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, k, a[N];\nint quick_sort(int q[], int l, int r, int k) {\nif (l &gt;= r) return q[l];\nint i = l - 1, j = r + 1, x = q[(l + r) &gt;&gt; 1];\nwhile (i &lt; j) {\ndo i++; while (q[i] &lt; x);\ndo j--; while (q[j] &gt; x);\nif (i &lt; j) swap(q[i], q[j]);\n}\nif (j - l + 1 &gt;= k) quick_sort(q, l, j, k);\nelse quick_sort(q, j + 1, r, k - (j - l + 1));\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;k);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", a + i);\nint ret = quick_sort(a, 0, n - 1, k);\nprintf(\"%d\\n\", ret);\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#2","title":"2 \u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5","text":"<p>Acwing 787</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, nums[N], tmp[N];\nvoid merge_sort(int q[], int l, int r) {\nif (l &gt;= r) return;\nint mid = (l + r) &gt;&gt; 1;\nmerge_sort(q, l, mid), merge_sort(q, mid + 1, r);\nint k = 0, i = l, j = mid + 1;\nwhile (i &lt;= mid &amp;&amp; j &lt;= r)\nif (q[i] &lt;= q[j]) tmp[k++] = q[i++];\nelse tmp[k++] = q[j++];\nwhile (i &lt;= mid) tmp[k++] = q[i++];\nwhile (j &lt;= r) tmp[k++] = q[j++];\nfor (int i = l, j = 0; i &lt;= r; i++, j++) q[i] = tmp[j];\n}\nint main() {\nscanf(\"%d\", &amp;n);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", nums + i);\nmerge_sort(nums, 0, n - 1);\nfor (int i = 0; i &lt; n; i++) printf(\"%d \", nums[i]);\nputs(\"\");\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#22","title":"2.2 \u9006\u5e8f\u5bf9\u6570\u91cf","text":"<p>Acwing 788</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\ntypedef long long LL;\nconst int N = 1e5 + 10;\nint n, q[N], tmp[N];\nLL merge_sort(int l, int r) {\nif (l &gt;= r) return 0;\nint mid = l + r &gt;&gt; 1;\nLL res = merge_sort(l, mid) + merge_sort(mid + 1, r);\nint i = l, j = mid + 1, k = 0;\nwhile (i &lt;= mid &amp;&amp; j &lt;= r) if (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];\nelse {\nres += mid - i + 1;\ntmp[k ++ ] = q[j ++ ];\n}\nwhile (i &lt;= mid) tmp[k ++ ] = q[i ++ ];\nwhile (j &lt;= r) tmp[k ++ ] = q[j ++ ];\nfor (int i = l, j = 0; i &lt;= r; i ++ , j ++ ) q[i] = tmp[j];\nreturn res;\n}\nint main() {\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i ++ ) cin &gt;&gt; q[i];\ncout &lt;&lt; merge_sort(0, n - 1) &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#3","title":"3 \u4e8c\u5206","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#31","title":"3.1 \u6570\u7684\u8303\u56f4","text":"<p>Acwing 789</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, q[N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", q + i);\nwhile (m--) {\nint x; scanf(\"%d\", &amp;x);\nint l = 0, r = n - 1;\nwhile (l &lt; r) { // \u67e5\u627e\u8d77\u59cb\u4f4d\u7f6e\nint mid = (l + r) &gt;&gt; 1;\nif (q[mid] &gt;= x) r = mid;\nelse l = mid + 1;\n}\nif (q[l] != x) {\nprintf(\"-1 -1\\n\");\ncontinue;\n}\nprintf(\"%d \", l);\nl = 0, r = n - 1;\nwhile (l &lt; r) { // \u67e5\u627e\u7ec8\u6b62\u4f4d\u7f6e\nint mid = (l + r + 1) &gt;&gt; 1;\nif (q[mid] &lt;= x) l = mid;\nelse r = mid - 1;\n}\nprintf(\"%d\\n\", l);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#32","title":"3.2 \u6570\u7684\u4e09\u6b21\u65b9\u6839","text":"<p>Acwing 790</p> <p>\u6309\u7167\u7ecf\u9a8c\uff0c\u8ba1\u7b97\u7ed3\u679c\u7684\u7cbe\u5ea6\u8981\u6bd4\u9898\u76ee\u8981\u6c42\u7684\u7cbe\u5ea6\u9ad8\u4e24\u4f4d\u3002</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main() {\ndouble x;\nscanf(\"%lf\", &amp;x);\ndouble l = -100, r = 100;\nwhile (r - l &gt; 1e-8) {\ndouble mid = (l + r) / 2;\nif (mid * mid * mid &gt;= x) r = mid;\nelse l = mid;\n}\nprintf(\"%.6lf\\n\", l);\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#4","title":"4 \u9ad8\u7cbe\u5ea6\u7b97\u6cd5","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#41","title":"4.1 \u52a0\u6cd5","text":"<p>Acwing 791</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvector&lt;int&gt; add(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B) {\nvector&lt;int&gt; C;\nfor (int i = 0, t = 0; i &lt; A.size() || i &lt; B.size() || t; i++) {\nif (i &lt; A.size()) t += A[i];\nif (i &lt; B.size()) t += B[i];\nC.push_back(t % 10);\nt /= 10;\n}\nreturn C;\n}\nint main() {\nstring a, b; cin &gt;&gt; a &gt;&gt; b;\nvector&lt;int&gt; A, B;\nfor (int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\nfor (int i = b.size() - 1; i &gt;= 0; i--) B.push_back(b[i] - '0');\nauto C = add(A, B);\nfor (int i = C.size() - 1; i &gt;= 0; i--) cout &lt;&lt; C[i];\ncout &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#42","title":"4.2 \u51cf\u6cd5","text":"<p>Acwing 792</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\nbool cmp(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B) {\nif (A.size() != B.size()) return A.size() &gt; B.size();\nfor (int i = A.size() - 1; i &gt;= 0; i--)\nif (A[i] != B[i])\nreturn A[i] &gt; B[i];\nreturn true;\n}\nvector&lt;int&gt; sub(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B) {\nvector&lt;int&gt; C;\nfor (int i = 0, t = 0; i &lt; A.size(); i++) {\nt = A[i] - t;\nif (i &lt; B.size()) t -= B[i];\nC.push_back((t + 10) % 10);\nif (t &lt; 0) t = 1;\nelse t = 0;\n}\nwhile (C.size() &gt; 1 &amp;&amp; !C.back()) C.pop_back();\nreturn C;\n}\nint main() {\nstring a, b; cin &gt;&gt; a &gt;&gt; b;\nvector&lt;int&gt; A, B;\nfor (int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\nfor (int i = b.size() - 1; i &gt;= 0; i--) B.push_back(b[i] - '0');\nvector&lt;int&gt; C;\nif (cmp(A, B)) C = sub(A, B);\nelse C = sub(B, A), cout &lt;&lt; '-';\nfor (int i = C.size() - 1; i &gt;= 0; i--) cout &lt;&lt; C[i];\ncout &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#43","title":"4.3 \u4e58\u6cd5","text":"<p>Acwing 793</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvector&lt;int&gt; mul(vector&lt;int&gt; &amp;A, int b) {\nvector&lt;int&gt; C;\nfor (int i = 0, t = 0; i &lt; A.size() || t; i++) { // \u8fd9\u91cc\u7684t\u662f\u7528\u6765\u5904\u7406\u6700\u540e\u7b97\u5b8c\u540e\u4f9d\u7136\u4f1a\u6709\u8fdb\u4f4d\u7684\u60c5\u51b5\uff01\nif (i &lt; A.size()) t += A[i] * b;\nC.push_back(t % 10);\nt /= 10;\n}\nwhile (C.size() &gt; 1 &amp;&amp; !C.back()) C.pop_back();\nreturn C;\n}\nint main() {\nstring a; int b; cin &gt;&gt; a &gt;&gt; b;\nvector&lt;int&gt; A;\nfor (int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\nauto C = mul(A, b);\nfor (int i = C.size() - 1; i &gt;= 0; i--) cout &lt;&lt; C[i];\ncout &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#44","title":"4.4 \u9664\u6cd5","text":"<p>Acwing 794</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvector&lt;int&gt; div(vector&lt;int&gt; &amp;A, int b, int &amp;r) {\nvector&lt;int&gt; C;\nr = 0;\nfor (int i = A.size() - 1; i &gt;= 0; i--) {\nr = r * 10 + A[i];\nC.push_back(r / b);\nr %= b;\n}\nreverse(C.begin(), C.end());\nwhile (C.size() &gt; 1 &amp;&amp; !C.back()) C.pop_back();\nreturn C;\n}\nint main() {\nstring a; int B; cin &gt;&gt; a &gt;&gt; B;\nvector&lt;int&gt; A;\nfor (int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\nint r;\nauto C = div(A, B, r);\nfor (int i = C.size() - 1; i &gt;= 0; i--) cout &lt;&lt; C[i];\ncout &lt;&lt; endl &lt;&lt; r &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#5","title":"5 \u524d\u7f00\u548c\u4e0e\u5dee\u5206","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#51","title":"5.1 \u4e00\u7ef4\u524d\u7f00\u548c","text":"<p>Acwing 795</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, s[N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++) {\nint x; scanf(\"%d\", &amp;x);\ns[i] += s[i - 1] + x;\n}\nwhile (m--) {\nint l, r; scanf(\"%d%d\", &amp;l, &amp;r);\nprintf(\"%d\\n\", s[r] - s[l - 1]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#52","title":"5.2 \u4e8c\u7ef4\u524d\u7f00\u548c","text":"<p>Acwing 796</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m, q;\nint s[N][N];\nint main() {\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;q);\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++) {\nint x; scanf(\"%d\", &amp;x);\ns[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + x;\n}\nwhile (q--) {\nint x1, y1, x2, y2; scanf(\"%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\nprintf(\"%d\\n\", s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#53","title":"5.3 \u4e00\u7ef4\u5dee\u5206","text":"<p>Acwing 797</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, b[N];\nvoid insert(int l, int r, int c) {\nb[l] += c;\nb[r + 1] -= c;\n}\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 1; i &lt;= n; i++) {\nint x; scanf(\"%d\", &amp;x);\ninsert(i, i, x);\n}\nwhile (m--) {\nint l, r, c; scanf(\"%d%d%d\", &amp;l, &amp;r, &amp;c);\ninsert(l, r, c);\n}\nfor (int i = 1; i &lt;= n; i++) {\nb[i] += b[i - 1];\nprintf(\"%d \", b[i]);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#54","title":"5.4 \u4e8c\u7ef4\u5dee\u5206","text":"<p>Acwing 798</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nconst int N = 1010;\nint n, m, q, x, b[N][N];\nvoid insert(int x1, int y1, int x2, int y2, int c) {\nb[x1][y1] += c;\nb[x2 + 1][y1] -= c;\nb[x1][y2 + 1] -= c;\nb[x2 + 1][y2 + 1] += c;\n}\nint main() {\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;q);\nfor (int i = 1; i &lt;= n; i++)\nfor (int j = 1; j &lt;= m; j++) {\nscanf(\"%d\", &amp;x);\ninsert(i, j, i, j, x);\n}\nwhile (q--) {\nint x1, y1, x2, y2, c;\nscanf(\"%d%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2, &amp;c);\ninsert(x1, y1, x2, y2, c);\n}\nfor (int i = 1; i &lt;= n; i++) {\nfor (int j = 1; j &lt;= m; j++) {\nb[i][j] += b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];\nprintf(\"%d \", b[i][j]);\n}\nprintf(\"\\n\");\n}\nreturn 0;\n} </code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#6","title":"6 \u53cc\u6307\u9488\u7b97\u6cd5","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#61","title":"6.1 \u6700\u957f\u8fde\u7eed\u4e0d\u91cd\u590d\u5b50\u5e8f\u5217","text":"<p>Acwing 799</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n;\nint q[N], s[N]; // q\u5b58\u50a8\u5143\u7d20\uff0cs\u8bb0\u5f55\u5143\u7d20q[i]\u51fa\u73b0\u6b21\u6570\nint main() {\nscanf(\"%d\", &amp;n);\nint res = 0;\nfor (int i = 0, j = 0; i &lt; n; i++) {\nscanf(\"%d\", q + i);\ns[q[i]]++;\nwhile (s[q[i]] &gt; 1) s[q[j++]]--;\nres = max(res, i - j + 1);\n}\nprintf(\"%d\\n\", res);\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#62","title":"6.2 \u6570\u7ec4\u5143\u7d20\u7684\u76ee\u6807\u548c","text":"<p>Acwing 800</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, x;\nint a[N], b[N];\nint main() {\nscanf(\"%d%d%d\", &amp;n, &amp;m, &amp;x);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", a + i);\nfor (int i = 0; i &lt; m; i++) scanf(\"%d\", b + i);\nfor (int i = 0, j = m - 1; i &lt; n; i++) {\nwhile (j &gt;= 0 &amp;&amp; a[i] + b[j] &gt; x) j--;\nif (j &gt;= 0 &amp;&amp; a[i] + b[j] == x) printf(\"%d %d\\n\", i, j);\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#63","title":"6.3 \u5224\u65ad\u5b50\u5e8f\u5217","text":"<p>Acwing 2816</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m;\nint a[N], b[N];\nint main() {\nscanf(\"%d%d\", &amp;n, &amp;m);\nfor (int i = 0; i &lt; n; i++) scanf(\"%d\", a + i);\nfor (int i = 0; i &lt; m; i++) scanf(\"%d\", b + i);\nint i = 0, j = 0;\nwhile (i &lt; n &amp;&amp; j &lt; m) {\nif (a[i] == b[j]) i++;\nj++;\n}\nif (i == n) puts(\"Yes\");\nelse puts(\"No\");\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#7","title":"7 \u4f4d\u8fd0\u7b97","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#71-1","title":"7.1 \u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570","text":"<p>Acwing 801</p> <pre><code>// \u89e3\u6cd5\u4e00\nint judge(int x) {\nint ret = 0;\nwhile (x) {\nx &amp;= (x - 1); // \u53bb\u6389x\u6700\u53f3\u8fb9\u7684\u4e00\u4e2a 1\nret++;\n}\nreturn ret;\n}\n// \u89e3\u6cd5\u4e8c\nint judge(int x) {\nint ret = 0;\nfor (int i = x; i; i -= i &amp; -i) ret++; // \u6bcf\u4e00\u6b21\u5faa\u73af\u51cf\u53bb n \u7684\u6700\u540e\u4e00\u4f4d 1\nreturn ret;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#8","title":"8 \u79bb\u6563\u5316","text":"<p>Acwing 802</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\ntypedef pair&lt;int, int&gt; PII;\nconst int N = 3e5 + 10;\nint n, m;\nint s[N];\nvector&lt;int&gt; alls;\nvector&lt;PII&gt; add, query;\nint find(int x) {\nint l = 0, r = alls.size() - 1;\nwhile (l &lt; r) {\nint mid = (l + r) &gt;&gt; 1;\nif (alls[mid] &gt;= x) r = mid;\nelse l = mid + 1;\n}\nreturn r + 1; // \u6ce8\u610f\u4e0b\u6807\n}\nint main() {\ncin &gt;&gt; n &gt;&gt; m;\nfor (int i = 0; i &lt; n; i++) {\nint x, c; cin &gt;&gt; x &gt;&gt; c;\nadd.push_back({x, c});\nalls.push_back(x);\n}\nfor (int i = 0; i &lt; m; i++) {\nint l, r; cin &gt;&gt; l &gt;&gt; r;\nquery.push_back({l, r});\nalls.push_back(l); alls.push_back(r);\n}\nsort(alls.begin(), alls.end());\nalls.erase((unique(alls.begin(), alls.end())), alls.end());\nfor (auto item: add) {\nint x = find(item.first);\ns[x] += item.second;\n}\nfor (int i = 1; i &lt;= alls.size(); i++) s[i] += s[i - 1];\nfor (auto item: query) {\nint l = find(item.first), r = find(item.second);\ncout &lt;&lt; s[r] - s[l - 1] &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/#9","title":"9 \u533a\u95f4\u5408\u5e76","text":"<p>Acwing 803</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\n#define x first\n#define y second\ntypedef pair&lt;int, int&gt; PII;\nint n;\nvector&lt;PII&gt; segs;\nvoid merge(vector&lt;PII&gt; &amp;segs) {\nvector&lt;PII&gt; res;\nsort(segs.begin(), segs.end());\nint st = -2e9, ed = -2e9;\nfor (auto seg: segs) if (ed &lt; seg.x) {\nif (st != -2e9) res.push_back({st, ed});\nst = seg.x, ed = seg.y;\n} else ed = max(ed, seg.y);\nif (st != -2e9) res.push_back({st, ed});\nsegs = res;\n}\nint main() {\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++) {\nint l, r; cin &gt;&gt; l &gt;&gt; r;\nsegs.push_back({l, r});\n}\nmerge(segs);\ncout &lt;&lt; segs.size() &lt;&lt; endl;\nreturn 0;\n}\n</code></pre>"},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%280%29/","title":"\u7b2c\u4e00\u7ae0 \u57fa\u7840\u7b97\u6cd5(0)","text":""},{"location":"blogs/post/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E8%AF%BE/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%280%29/#_1","title":"\u5f85\u66f4\u4fe1","text":""}]}